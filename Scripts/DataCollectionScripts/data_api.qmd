---
title: "Obtain raw data programatically"
subtitle: "`data_api` subproject."
html:
    code-fold: true
    number-sections: true
---

This subproject will call various APIs or execute scraping scripts. Many things can break over time: API credentials, API versions, maps of scraped websites. Therefore, it cannot be reasonably expected that the code here will work in the future. The main purpose of including this code in the project is to document how the raw data were collected at a specific point in time.

## Setup

### Set environment for subproject

```{r}
#| label: set_project
Sys.setenv(TAR_PROJECT = "data_api")
```

### Initialize `targets` script

```{r}
#| label: setup
library(targets)
tar_unscript()
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", tar_script = "_data_api.R")
```


### Define `targets` globals

We first define some global options/functions common to all targets.

```{r}
#| engine: targets
#| label: globals
#| tar_globals: true

# read custom functions
lapply(list.files(here::here("R"), full.names = TRUE), source)
tar_option_set(packages = packages())
```

## Targets

### DFG - Gepris

Gepris information page (`https://gepris.dfg.de/gepris/OCTOPUS?task=showMonitor`) at scrape time:


Data Monitor
Last update: 26.01.2024

Most recent date of approval: 26.11.2023
All projects decided upon and approved between 1.1.1999 and the specified award letter date can be found in GEPRIS.

Entries by Type	Count
Projects with final reports	40901
Projects	142517
Persons	93668
Institutions	43769
Entries by Research Area	Count
Humanities and Social Sciences Colour index for Humanities and Social Sciences	26304
Life Sciences Colour index for Life Sciences	49480
Natural Sciences Colour index for Natural Sciences	38446
Engineering Sciences Colour index for Engineering Sciences	26304
Infrastructure	317


```{r}
#| engine: targets
#| label: dfg
list(
  tar_target(
    name = dfg_catalogue_tsv,
    command = scrape_dfg_catalogue(
      gepris_url = "https://gepris.dfg.de/gepris/OCTOPUS?beginOfFunding=&bewilligungsStatus=&bundesland=DEU%23&context=projekt&einrichtungsart=-1&fachgebiet=%23&findButton=historyCall&gefoerdertIn=&ggsHunderter=0&hitsPerPage=50&index=1&nurProjekteMitAB=false&oldGgsHunderter=0&oldfachgebiet=%23&pemu=24&peu=%23&task=doKatalog&teilprojekte=true&zk_transferprojekt=false",
      outfile = here::here("Data", "InputData", "dfg_catalogue.tsv"), 
      sleep_time = 5,
      run = as.logical(Sys.getenv("API_RUN")) #as.logical(Sys.getenv("API_RUN"))
      ),
    format = "file"
  ),
tar_target(
    name = dfg_projects_tsv,
    command = scrape_dfg_projects(
      gepris_catalogue = dfg_catalogue_tsv,
      outfile = here::here("Data", "InputData", "dfg_projects.tsv"), 
      sleep_time = 5,
      run = as.logical(Sys.getenv("API_RUN")) #
      ),
    format = "file"
  )
)
```

### HAL

```{r}
#| engine: targets
#| label: hal
list(
  tar_target(
    name = hal_types,
    command = c("ART", "COUV", "COMM", "OUV")
  ),
  tar_target(
    name = hal_years,
    command = seq(2008, 2012, 1)
  ),
  tar_target(
    name = hal,
    command = call_hal(hal_types, hal_years, run = as.logical(Sys.getenv("API_RUN"))),
    pattern = cross(hal_types, hal_years)

  )
)
```

## Reset subproject
```{r}
#| label: unset_project
Sys.setenv(TAR_PROJECT = "main")
```