---
title: "Populate project with input data"
subtitle: "`data_input` subproject."
html:
    code-fold: true
    number-sections: true
---

This subproject obtains raw data deposited on [Open Science Framework](https://osf.io) and populates the `input_data` folder.

## Setup

### Set environment for subproject

```{r}
#| label: set_project
Sys.setenv(TAR_PROJECT = "data_input")
```

### Initialize `targets` script

```{r}
#| label: setup
library(targets)
tar_unscript()
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", tar_script = "_data_input.R")
```


### Define `targets` globals

We first define some global options/functions common to all targets.

```{r}
#| engine: targets
#| label: globals
#| tar_globals: true

# read custom functions
lapply(list.files(here::here("R"), full.names = TRUE), source)
tar_option_set(packages = packages())
```

## Targets

### Data import from OSF

```{r}
#| engine: targets
#| label: input_data
list(
  tar_target(
    name = osf_info,
    command = osf_get_info(osf_url = "https://osf.io/p4e9q", osf_folder = "input_data"),
    cue = tar_cue("always"),
    error = "continue"
  ),
tar_target(
    name = osf_download_df,
    command = osf_get_files(osf_info, local_folder = here::here("data", "input_data"))
  ),
tar_target(
    name = input_data_files_unnamed,
    command = here::here(osf_download_df$local_path),
    format = "file",
  ),
tar_target(
    name = input_data_files,
    command = stats::setNames(input_data_files_unnamed, osf_download_df$name)
  )
)
```

### Guide to data sources

```{r}
#| engine: targets
#| label: data_sources_guide
list(
  tarchetypes::tar_render(
    name = data_sources_guide,
    path = here::here("scripts", "data_appendix_scripts", "data_sources_guide.qmd")
  )
)
```

## Reset subproject
```{r}
#| label: unset_project
Sys.setenv(TAR_PROJECT = "main")
```