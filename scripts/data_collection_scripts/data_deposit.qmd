---
title: "Deposit input data"
subtitle: "`data_deposit` subproject."
html:
    code-fold: true
    number-sections: true
---

This subprojects completes data collection and freezes input data by depositing them on [Open Science Framework](https://osf.io). It also produces input data's metadata documentation.

## Setup

### Targets environment for subproject

```{r}
#| label: set_project
Sys.setenv(TAR_PROJECT = "data_deposit")
```

### Targets script setup

```{r}
#| label: setup
library(targets)
tar_unscript()
knitr::opts_chunk$set(tar_script = "_data_deposit.R", collapse = TRUE, comment = "#>")
```


### Targets globals

We first define some global options/functions common to all targets.

```{r}
#| engine: targets
#| label: globals
#| tar_globals: true

# read custom functions
lapply(list.files(here::here("R"), full.names = TRUE), source)
tar_option_set(packages = packages())
# obtain configuration from .Renviron
osf_pat <- Sys.getenv("OSF_PAT")
```


## Targets

### Pinboard
Register the pin board.

```{r}
#| engine: targets
#| label: pin_board
list(
  tar_target(
    name = input_data_board,
    command = pins::board_folder(here::here("data", "intermediate_data", "input_data_board"), versioned = TRUE)
  )
)
```

### Pins

#### CSF

```{r}
#| engine: targets
#| label: csf_tsv
list(
  tar_target(
    name = csf.tsv,
    command = here::here("data", "input_data", "csf.tsv"),
    format = "file"
  ),
  tar_target(
    name = csf_tsv_pin,
    command = pin_write(
      board = input_data_board,
      csf.tsv,
      name = "csf.tsv",
      title = "Czech Science Foundation",
      description = "The dataset contains information about the funding received per project and organization.",
      metadata = list(
        creator = metadata_creator(),
        funding = metadata_funding(),
        variables = list(
          kod = "Identifier of a project",
          org_id = "Identifier of research organization",
          org_name = "Name of research organization",
          total = "Total funding received by an organization from the project",
          national_public = "Funding received by an organization from national public sources",
          foreign_public = "Funding received by an organization from foreign public sources - monitored from 2020 onwards",
          investment = "Funding received by an organization and earmarked for investments - monitored from 2013 onwards"
          ),
        source = "https://www.isvavai.cz/cep",
        license = "CC-BY-4.0"
      ),
      type = ""
    )
  )
)
```

### Manifest

```{r}
#| engine: targets
#| label: update_manifest
list(
  tar_target(
    name = input_data_board_manifest,
    command = update_manifest(board = input_data_board,
    authors_by_pubs,
    funding_by_pubs,
    riv_details,
    riv_identifiers,
    riv_text,
    riv_authors,
    cep_investigators,
    cep_details,
    cep_funding,
    cep_funding_org)
    )
)
```

## Reset project
```{r}
#| label: unset_project
Sys.setenv(TAR_PROJECT = "main")
```